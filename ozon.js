const axios = require('axios');

async function getOzonReport(client_id, api_key, date, type = 'today', shop_name = '') {
  let metrics = [];
  if (type === 'today') {
    metrics = ["revenue", "ordered_units"];
  } else {
    metrics = ["revenue", "ordered_units", "returns_sum", "cancellations_sum"];
  }

  const res = await axios.post(
    'https://api-seller.ozon.ru/v1/analytics/data',
    {
      date_from: date,
      date_to: date,
      metrics,
      dimension: ["day"],
      filters: [],
      limit: 1,
      offset: 0
    },
    {
      headers: {
        "Client-Id": client_id,
        "Api-Key": api_key,
        "Content-Type": "application/json"
      }
    }
  );

  if (!res.data.result.data.length) {
    return `üè™ –ú–∞–≥–∞–∑–∏–Ω: *${shop_name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}*\nüìÖ –û—Ç—á–µ—Ç –∑–∞ ${date}\n\n–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å.`;
  }

  const values = res.data.result.data[0].metrics;
  let result = `üè™ –ú–∞–≥–∞–∑–∏–Ω: *${shop_name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}*\n\n`;
  result += `üïí –û—Ç—á–µ—Ç –∑–∞ *${date}*\n\n`;
  result += `üí∞ –ó–∞–∫–∞–∑–∞–Ω–æ –Ω–∞ —Å—É–º–º—É: ${formatNum(values[0]) ?? '-'}‚ÇΩ\n\n`;
  result += `üì¶ –ó–∞–∫–∞–∑–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${formatNum(values[1]) ?? '-'}\n`;
  if (type === 'yesterday') {
    result += `üîÑ –í–æ–∑–≤—Ä–∞—Ç—ã: ${formatNum(values[2]) ?? '-'}\n`;
    result += `‚ùå –û—Ç–º–µ–Ω—ã: ${formatNum(values[3]) ?? '-'}\n`;
  }
  return result;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª —Å –ø—Ä–æ–±–µ–ª–æ–º
function formatNum(num) {
  if (num === undefined || num === null) return '-';
  return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
}

module.exports = { getOzonReport };
