require('dotenv').config();
const { Client } = require('pg');
const { Telegraf, session, Markup } = require('telegraf');
const cron = require('node-cron');

// ==============================================
// –ù–ê–°–¢–†–û–ô–ö–ê –ò –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
// ==============================================
const requiredEnvVars = ['BOT_TOKEN', 'DB_USER', 'DB_HOST', 'DB_NAME', 'DB_PASSWORD', 'DB_PORT'];
const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);

if (missingVars.length > 0) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingVars.join(', '));
  process.exit(1);
}

// ==============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê –ò –ë–ê–ó–´ –î–ê–ù–ù–´–•
// ==============================================
const bot = new Telegraf(process.env.BOT_TOKEN);
const client = new Client({
  user: process.env.DB_USER,
  host: process.env.DB_HOST,
  database: process.env.DB_NAME,
  password: process.env.DB_PASSWORD,
  port: parseInt(process.env.DB_PORT),
});

// ==============================================
// –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–°–°–ò–ô –ò –ú–ï–ù–Æ
// ==============================================
bot.use(session({
  defaultSession: () => ({
    waitingFor: null,
    userData: {}
  })
}));

function getMainMenu() {
  return Markup.keyboard([
    ['üì© –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É', 'üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏'],
    ['üîÑ –ü—Ä–∏—Å–ª–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ–π—á–∞—Å', '‚ùì –ü–æ–º–æ—â—å']
  ]).resize().oneTime();
}

// ==============================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –°–û –°–¢–ê–¢–£–°–û–ú –ú–ê–ì–ê–ó–ò–ù–ê
// ==============================================
async function getShopStatus() {
  // –ó–∞–≥–ª—É—à–∫–∞ - –≤ –±—É–¥—É—â–µ–º –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API-–∑–∞–ø—Ä–æ—Å
  return `–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–∞–≥–∞–∑–∏–Ω–∞:\n\n` +
         `‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ\n` +
         `üïí –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 09:00 - 21:00\n` +
         `üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã: +7 (XXX) XXX-XX-XX\n\n` +
         `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date().toLocaleString()}`;
}



// ==============================================
// –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê
// ==============================================

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  try {
    const { id: chat_id, first_name } = ctx.from;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    const userExists = await client.query(
      'SELECT is_subscribed FROM users WHERE chat_id = $1', 
      [chat_id]
    );

    if (userExists.rowCount === 0) {
      await client.query(
        `INSERT INTO users (chat_id, first_name, is_subscribed, client_id, seller_api) 
         VALUES ($1, $2, false, '', '')`,
        [chat_id, first_name]
      );
    }

    await ctx.replyWithMarkdown(
      `üëã –ü—Ä–∏–≤–µ—Ç, *${first_name || '–¥—Ä—É–≥'}*!\n\n` +
      '–Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–∞–≥–∞–∑–∏–Ω–∞. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
      getMainMenu()
    );
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –≤ /start:', err);
    ctx.reply('‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
bot.hears(['üì© –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É', '/subscribe'], async (ctx) => {
  try {
    const { id: chat_id } = ctx.from;
    
    await client.query(
      'UPDATE users SET is_subscribed = true WHERE chat_id = $1',
      [chat_id]
    );
    
    await ctx.reply(
      '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É!\n' +
      '–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∞–≥–∞–∑–∏–Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 —É—Ç—Ä–∞.',
      getMainMenu()
    );
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:', err);
    ctx.reply('‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.');
  }
});

// –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
bot.hears(['üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏', '/unsubscribe'], async (ctx) => {
  try {
    const { id: chat_id } = ctx.from;
    
    await client.query(
      'UPDATE users SET is_subscribed = false WHERE chat_id = $1',
      [chat_id]
    );
    
    await ctx.reply(
      'üîï –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.\n' +
      '–í—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.',
      getMainMenu()
    );
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø–∏—Å–∫–∏:', err);
    ctx.reply('‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è.');
  }
});

// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ–π—á–∞—Å
bot.hears(['üîÑ –ü—Ä–∏—Å–ª–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ–π—á–∞—Å', '/status_now'], async (ctx) => {
  try {
    const status = await getShopStatus();
    await ctx.reply(status, getMainMenu());
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', err);
    ctx.reply('‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–∞–≥–∞–∑–∏–Ω–∞', getMainMenu());
  }
});

// –ü–æ–º–æ—â—å
bot.hears(['‚ùì –ü–æ–º–æ—â—å', '/help'], (ctx) => {
  ctx.replyWithMarkdown(
    '*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n' +
    'üì© *–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É* - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ 10:00\n' +
    'üîï *–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏* - –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n' +
    'üîÑ *–ü—Ä–∏—Å–ª–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ–π—á–∞—Å* - —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞\n\n' +
    '*–î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã:*\n' +
    '/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n' +
    '/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ'
  );
});

// ==============================================
// –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –†–ê–°–°–´–õ–ö–ê –í 10:00
// ==============================================
function setupDailyNotifications() {
  cron.schedule('0 10 * * *', async () => {
    console.log('‚è∞ –ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ —Å—Ç–∞—Ç—É—Å–∞...');
    try {
      const subscribedUsers = await client.query(
        'SELECT chat_id FROM users WHERE is_subscribed = true'
      );
      
      const status = await getShopStatus();
      const message = `üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –í–æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:\n\n${status}`;
      
      for (const user of subscribedUsers.rows) {
        try {
          await bot.telegram.sendMessage(user.chat_id, message);
          console.log(`‚úì –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.chat_id}`);
        } catch (err) {
          console.error(`‚úó –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è ${user.chat_id}:`, err.message);
        }
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–µ:', err);
    }
  }, {
    timezone: "Europe/Moscow"
  });
}

// ==============================================
// –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ò –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
// ==============================================

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.catch((err, ctx) => {
  console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
  ctx.reply('‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.');
});

// Graceful shutdown
process.once('SIGINT', () => shutdown('SIGINT'));
process.once('SIGTERM', () => shutdown('SIGTERM'));

async function shutdown(signal) {
  try {
    await client.end();
    await bot.stop(signal);
    console.log('üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ:', err);
    process.exit(1);
  }
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.connect()
  .then(() => {
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ PostgreSQL');
    setupDailyNotifications();
    return bot.launch();
  })
  .then(() => console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ'))
  .catch(err => {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
    process.exit(1);
  });