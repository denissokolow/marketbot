// utils/reportText.js
const {
  getOzonReportFiltered,
  getReturnsCountFiltered,
  getReturnsSumFiltered,
  getDeliveryBuyoutStats,
  getBuyoutAndProfit,
  getAverageDeliveryTimeDays, // <- —Ñ—É–Ω–∫—Ü–∏—è, –¥–µ–ª–∞—é—â–∞—è POST /v1/analytics/average-delivery-time/summary –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —á–∏—Å–ª–æ –¥–Ω–µ–π
  formatMoney,
} = require('../ozon');

const { getCampaignDailyStatsTotals } = require('../services/performanceApi');
const { getTodayISO, getYesterdayISO } = require('./utils');

// HTML-—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
function esc(s = '') {
  return String(s)
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;');
}

// –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é (–º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π)
function padRight(str, width = 8) {
  const v = String(str);
  const spaces = Math.max(0, width - v.length);
  return ' '.repeat(spaces) + v;
}

// –§–æ—Ä–º–∞—Ç c 2 –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π (–∑–∞–ø—è—Ç–∞—è –≤ ru-RU)
function format2(num) {
  if (num == null || !isFinite(num)) return '-';
  return Number(num).toLocaleString('ru-RU', {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2,
  });
}

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–∞ –∑–∞ –¥–∞—Ç—É.
 * opts:
 *  - trackedSkus: Set<number> | number[] ‚Äî —Ñ–∏–ª—å—Ç—Ä –ø–æ SKU
 *  - hideAds: boolean ‚Äî –µ—Å–ª–∏ true, –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—å ¬´–†–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É / –î.–†.–†. / CTR / –°–í–î¬ª
 *  - db: pg client (–¥–ª—è —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–∑ tracked_products.net)
 *  - chatId: number (–¥–ª—è –≤—ã–±–æ—Ä–∫–∏ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
 */
async function makeReportText(user, date, opts = {}) {
  const from = `${date}T00:00:00.000Z`;
  const to   = `${date}T23:59:59.999Z`;

  const trackedSkus = opts.trackedSkus || null;
  const hideAds     = !!opts.hideAds;
  const db          = opts.db || null;
  const chatId      = opts.chatId || null;

  // 1) –ó–∞–∫–∞–∑—ã (—Ñ–∏–ª—å—Ç—Ä –ø–æ SKU)
  const metrics = await getOzonReportFiltered({
    client_id: user.client_id,
    api_key:   user.seller_api,
    date,
    metrics: ['revenue', 'ordered_units'],
    trackedSkus,
  });

  const revenueOrdered = Number(metrics?.[0] || 0);
  const orderedUnits   = Number(metrics?.[1] || 0);

  // 2) –í–æ–∑–≤—Ä–∞—Ç—ã (—Ñ–∏–ª—å—Ç—Ä –ø–æ SKU)
  const returnsCount = await getReturnsCountFiltered({
    client_id: user.client_id,
    api_key:   user.seller_api,
    date,
    trackedSkus,
  });
  const returnsSum = await getReturnsSumFiltered({
    client_id: user.client_id,
    api_key:   user.seller_api,
    date,
    trackedSkus,
  });

  // 3) –í—ã–∫—É–ø—ã (—Ñ–∏–ª—å—Ç—Ä –ø–æ SKU; —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–∑ tracked_products.net —á–µ—Ä–µ–∑ db/chatId)
  const stats = await getDeliveryBuyoutStats({
    client_id:  user.client_id,
    api_key:    user.seller_api,
    date_from:  from,
    date_to:    to,
    trackedSkus,
    db,
    chatId,
  });

  // 4) –°—É–º–º–∞—Ä–Ω—ã–µ –∏—Ç–æ–≥–∏ (–ø—Ä–∏–±—ã–ª—å —Å—á–∏—Ç–∞–µ—Çc—è –Ω–∞ –±–∞–∑–µ buyoutAmount –∏–∑ /list)
  const { buyoutAmount, profit, services_amount } = await getBuyoutAndProfit({
    client_id:  user.client_id,
    api_key:    user.seller_api,
    date_from:  from,
    date_to:    to,
    buyoutCost: stats.buyoutCost,
    buyoutAmount: stats.totalAmount,
  });

  // --- –†–ï–ö–õ–ê–ú–ê: Performance API ---
  let adSpendPerf = null; // ‚ÇΩ
  let ctrPerf     = null; // %
  let drrPerf     = null; // %
  // --- –°–í–î (—Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏, –¥–Ω–∏) ---
  let svdDaysInt  = null;

  if (!hideAds) {
    // 4.1 Performance (CTR, —Ä–∞—Å—Ö–æ–¥—ã, –î–†–† –æ—Ç perf)
    try {
      let perfId = null, perfSecret = null;
      if (db && chatId) {
        const rr = await db.query(
          `SELECT performance_client_id, performance_secret
             FROM shops
            WHERE chat_id = $1
              AND performance_client_id IS NOT NULL
              AND performance_secret IS NOT NULL
            ORDER BY id
            LIMIT 1`,
          [chatId]
        );
        if (rr.rowCount) {
          perfId = rr.rows[0].performance_client_id;
          perfSecret = rr.rows[0].performance_secret;
        }
      }

      if (perfId && perfSecret) {
        const { views, clicks, spent } = await getCampaignDailyStatsTotals({
          client_id: perfId,
          client_secret: perfSecret,
          date, // YYYY-MM-DD
        });

        adSpendPerf = spent; // ‚ÇΩ
        ctrPerf     = views > 0 ? (clicks / views) * 100 : null;
        drrPerf     = revenueOrdered > 0 ? (spent / revenueOrdered) * 100 : null;
      }
    } catch (e) {
      console.error('[makeReportText] Performance API error:', e?.response?.data || e.message);
    }

    // 4.2 –°–í–î (–¥–Ω–∏, –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª–æ–≥–æ –±–µ–∑ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
    try {
      const svd = await getAverageDeliveryTimeDays({
        client_id: user.client_id,
        api_key:   user.seller_api,
        date, // –æ—Ç—á–µ—Ç –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
      });
      if (svd != null && isFinite(svd)) {
        svdDaysInt = Math.round(Number(svd));
      }
    } catch (e) {
      console.error('[makeReportText] SVD error:', e?.response?.data || e.message);
    }
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç (–∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –±—É–¥–µ–º –ø–µ—á–∞—Ç–∞—Ç—å –≤ <code>...</code>)
  const lines = [];
  lines.push(`üè™ –ú–∞–≥–∞–∑–∏–Ω:  ${padRight(user.shop_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', 0)}`);
  lines.push('');
  lines.push(`üìÜ –û—Ç—á—ë—Ç –∑–∞:  ${padRight(date, 0)}`);
  lines.push('');
  lines.push(`üì¶ –ó–∞–∫–∞–∑–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:  ${padRight(orderedUnits, 2)}`);
  lines.push(`üí∏ –ó–∞–∫–∞–∑–∞–Ω–æ –Ω–∞ —Å—É–º–º—É:  ${padRight(`${formatMoney(revenueOrdered)}‚ÇΩ`, 2)}`);
  lines.push('');
  lines.push(`üì¶ –í—ã–∫—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:  ${padRight(stats.totalCount, 2)}`);
  lines.push(`üí∏ –í—ã–∫—É–ø–ª–µ–Ω–æ –Ω–∞ —Å—É–º–º—É:  ${padRight(`${formatMoney(buyoutAmount)}‚ÇΩ`, 2)}`);
  lines.push(`üí∏ –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–∫—É–ø–æ–≤:  ${padRight(`${formatMoney(stats.buyoutCost)}‚ÇΩ`, 2)}`);
  lines.push('');
  lines.push(`üì¶ –í–æ–∑–≤—Ä–∞—Ç—ã:  ${padRight(returnsCount, 2)}`);
  lines.push(`üí∏ –í–æ–∑–≤—Ä–∞—Ç—ã –Ω–∞ —Å—É–º–º—É:  ${padRight(`${formatMoney(returnsSum)}‚ÇΩ`, 2)}`);
  lines.push('');

  if (!hideAds) {
    const adSpendLine = adSpendPerf == null ? '-' : `${formatMoney(adSpendPerf)}‚ÇΩ`;
    const drrLine     = drrPerf == null     ? '-' : `${format2(drrPerf)}%`;
    const ctrLine     = ctrPerf == null     ? '-' : `${format2(ctrPerf)}%`;
    const svdLine     = svdDaysInt == null  ? '-' : `${svdDaysInt.toLocaleString('ru-RU')} –¥–Ω.`;

    lines.push(`üí∏ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É:  ${padRight(adSpendLine, 2)}`);
    lines.push(`üí∏ –î.–†.–†:  ${padRight(drrLine, 2)}`);
    lines.push(`üí∏ CTR:  ${padRight(ctrLine, 2)}`);
    lines.push('');
    lines.push(`üì¶ –°–í–î:  ${padRight(svdLine, 2)}`);
    lines.push('');
    lines.push(`üí∞ –ü—Ä–∏–±—ã–ª—å:  ${padRight(`${formatMoney(profit)}‚ÇΩ`, 2)}`);
    lines.push('');
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–µ–∑ <pre>: –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ <code>...</code> (–º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π, –±–µ–∑ –≥–æ–ª—É–±–æ–≥–æ —Ñ–æ–Ω–∞)
  const html = lines.map(line => `<code>${esc(line)}</code>`).join('\n');
  return html;
}

async function makeTodayReportText(user, opts = {}) {
  const date = getTodayISO();
  return makeReportText(user, date, { ...(opts || {}), hideAds: true });
}

async function makeYesterdayReportText(user, opts = {}) {
  const date = getYesterdayISO();
  return makeReportText(user, date, { ...(opts || {}), hideAds: false });
}

module.exports = {
  makeTodayReportText,
  makeYesterdayReportText,
};
